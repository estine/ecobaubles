{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 5,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "rnbo",
		"rect" : [ 526.0, 304.0, 1834.0, 1035.0 ],
		"default_fontname" : "Lato",
		"gridsize" : [ 15.0, 15.0 ],
		"title" : "untitled",
		"boxes" : [ 			{
				"box" : 				{
					"format" : 0,
					"id" : "obj-8",
					"maxclass" : "number",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 212.0, -4.0, 50.0, 23.0 ],
					"rnbo_classname" : "number",
					"rnbo_extra_attributes" : 					{
						"minimum" : "<none>",
						"maximum" : "<none>",
						"initialFormat" : "integer",
						"preset" : 0,
						"order" : ""
					}
,
					"rnbo_serial" : 3,
					"rnbo_uniqueid" : "number_obj-8"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-9",
					"maxclass" : "flonum",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"parameter_enable" : 0,
					"patching_rect" : [ 119.0, -4.0, 50.0, 23.0 ],
					"rnbo_classname" : "number",
					"rnbo_extra_attributes" : 					{
						"minimum" : "<none>",
						"maximum" : "<none>",
						"initialFormat" : "float",
						"preset" : 0,
						"order" : ""
					}
,
					"rnbo_serial" : 1,
					"rnbo_uniqueid" : "number_obj-9"
				}

			}
, 			{
				"box" : 				{
					"fontface" : 0,
					"fontname" : "Lato",
					"fontsize" : 12.0,
					"id" : "obj-5",
					"interval" : 100.0,
					"maxclass" : "number~",
					"mode" : 2,
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "signal", "float" ],
					"patching_rect" : [ 1055.0, 860.0, 56.0, 23.0 ],
					"rnbo_classname" : "number~",
					"rnbo_extra_attributes" : 					{
						"interval" : 100.0,
						"displaymode" : "first",
						"initialMode" : "monitor"
					}
,
					"rnbo_serial" : 1,
					"rnbo_uniqueid" : "number~_obj-5",
					"sig" : 0.0
				}

			}
, 			{
				"box" : 				{
					"fontface" : 0,
					"fontname" : "Lato",
					"fontsize" : 12.0,
					"id" : "obj-4",
					"interval" : 100.0,
					"maxclass" : "number~",
					"mode" : 2,
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "signal", "float" ],
					"patching_rect" : [ 586.0, 860.0, 56.0, 23.0 ],
					"rnbo_classname" : "number~",
					"rnbo_extra_attributes" : 					{
						"interval" : 100.0,
						"displaymode" : "first",
						"initialMode" : "monitor"
					}
,
					"rnbo_serial" : 2,
					"rnbo_uniqueid" : "number~_obj-4",
					"sig" : 0.0
				}

			}
, 			{
				"box" : 				{
					"fontface" : 0,
					"fontname" : "Lato",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"interval" : 100.0,
					"maxclass" : "number~",
					"mode" : 2,
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "signal", "float" ],
					"patching_rect" : [ 119.0, 860.0, 56.0, 23.0 ],
					"rnbo_classname" : "number~",
					"rnbo_extra_attributes" : 					{
						"interval" : 100.0,
						"displaymode" : "first",
						"initialMode" : "monitor"
					}
,
					"rnbo_serial" : 3,
					"rnbo_uniqueid" : "number~_obj-3",
					"sig" : 0.0
				}

			}
, 			{
				"box" : 				{
					"code" : "// Traversal parameters\r\n@param({ min: 0.01, max: 10.0 }) rate = 0.5; // point update rate in Hz\r\n@param({ min: 0, max: 3, steps: 1 }) traversalOrder = 0; // 0: sequential, 1: random, 2: inside-out, 3: outside-in\r\n@param({ min: 0, max: 6, steps: 1 }) crystalType = 0; // 0–6: triclinic to cubic\r\n\r\n// State variables\r\n@state timeAcc = 0;\r\n@state index = 0;\r\n@state randSeed = 1234;\r\n\r\n// Output coordinates\r\nout1 = 0; // x\r\nout2 = 0; // y\r\nout3 = 0; // z\r\n\r\n// Sample rate inverse\r\nvar samplerateinv = 1 / samplerate();\r\n\r\n// Number of points in 3×3×3 grid\r\nlet numPoints = 27;\r\n\r\n// Advance timer\r\ntimeAcc += samplerateinv;\r\n\r\nif (timeAcc >= 1.0 / rate) {\r\n    timeAcc -= 1.0 / rate;\r\n\r\n    // Determine point index\r\n    var idx = 0;\r\n    if (traversalOrder == 1) {\r\n        // Random traversal\r\n        randSeed = (randSeed * 1664525 + 1013904223) % 4294967296;\r\n        idx = randSeed % numPoints;\r\n    } else {\r\n        // Sequential traversal (others can be added later)\r\n        idx = (index + 1) % numPoints;\r\n    }\r\n    index = idx;\r\n\r\n    // 3D grid indices\r\n    var xi = idx % 3;\r\n    var yi = floor(idx / 3) % 3;\r\n    var zi = floor(idx / 9);\r\n\r\n    // Normalized grid coordinates (0.0 to 1.0)\r\n    var gx = xi / 2.0;\r\n    var gy = yi / 2.0;\r\n    var gz = zi / 2.0;\r\n\r\n    // Basis vectors default to identity\r\n    var bx = [1.0, 0.0, 0.0];\r\n    var by = [0.0, 1.0, 0.0];\r\n    var bz = [0.0, 0.0, 1.0];\r\n\r\n    // Modify basis vectors based on crystal system\r\n    if (crystalType == 0) { // triclinic\r\n        bx = [1.0, 0.1, 0.1];\r\n        by = [0.1, 1.0, 0.1];\r\n        bz = [0.1, 0.1, 1.0];\r\n    } else if (crystalType == 1) { // monoclinic\r\n        by = [0.2, 1.0, 0.1];\r\n    } else if (crystalType == 2) { // orthorhombic\r\n        bx = [1.2, 0.0, 0.0];\r\n        by = [0.0, 1.1, 0.0];\r\n        bz = [0.0, 0.0, 0.9];\r\n    } else if (crystalType == 3) { // tetragonal\r\n        bz = [0.0, 0.0, 1.5];\r\n    } else if (crystalType == 4) { // trigonal\r\n        bx = [1.0, 0.0, 0.0];\r\n        by = [0.5, 0.866, 0.0];\r\n    } else if (crystalType == 5) { // hexagonal\r\n        bx = [1.0, 0.0, 0.0];\r\n        by = [0.5, 0.866, 0.0];\r\n        bz = [0.0, 0.0, 1.5];\r\n    } else if (crystalType == 6) { // cubic\r\n        bx = [1.0, 0.0, 0.0];\r\n        by = [0.0, 1.0, 0.0];\r\n        bz = [0.0, 0.0, 1.0];\r\n    }\r\n\r\n    // Compute 3D position\r\n    var x = gx * bx[0] + gy * by[0] + gz * bz[0];\r\n    var y = gx * bx[1] + gy * by[1] + gz * bz[1];\r\n    var z = gx * bx[2] + gy * by[2] + gz * bz[2];\r\n\r\n    // Output coordinates\r\n    out1 = x;\r\n    out2 = y;\r\n    out3 = z;\r\n}",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-2",
					"maxclass" : "codebox~",
					"numinlets" : 1,
					"numoutlets" : 3,
					"outlettype" : [ "signal", "signal", "signal" ],
					"patching_rect" : [ 119.0, 76.0, 955.0, 758.0 ],
					"rnbo_classname" : "codebox~",
					"rnbo_extra_attributes" : 					{
						"code" : "// Traversal parameters\r\n@param({ min: 0.01, max: 10.0 }) rate = 0.5; // point update rate in Hz\r\n@param({ min: 0, max: 3, steps: 1 }) traversalOrder = 0; // 0: sequential, 1: random, 2: inside-out, 3: outside-in\r\n@param({ min: 0, max: 6, steps: 1 }) crystalType = 0; // 0–6: triclinic to cubic\r\n\r\n// State variables\r\n@state timeAcc = 0;\r\n@state index = 0;\r\n@state randSeed = 1234;\r\n\r\n// Output coordinates\r\nout1 = 0; // x\r\nout2 = 0; // y\r\nout3 = 0; // z\r\n\r\n// Sample rate inverse\r\nvar samplerateinv = 1 / samplerate();\r\n\r\n// Number of points in 3×3×3 grid\r\nlet numPoints = 27;\r\n\r\n// Advance timer\r\ntimeAcc += samplerateinv;\r\n\r\nif (timeAcc >= 1.0 / rate) {\r\n    timeAcc -= 1.0 / rate;\r\n\r\n    // Determine point index\r\n    var idx = 0;\r\n    if (traversalOrder == 1) {\r\n        // Random traversal\r\n        randSeed = (randSeed * 1664525 + 1013904223) % 4294967296;\r\n        idx = randSeed % numPoints;\r\n    } else {\r\n        // Sequential traversal (others can be added later)\r\n        idx = (index + 1) % numPoints;\r\n    }\r\n    index = idx;\r\n\r\n    // 3D grid indices\r\n    var xi = idx % 3;\r\n    var yi = floor(idx / 3) % 3;\r\n    var zi = floor(idx / 9);\r\n\r\n    // Normalized grid coordinates (0.0 to 1.0)\r\n    var gx = xi / 2.0;\r\n    var gy = yi / 2.0;\r\n    var gz = zi / 2.0;\r\n\r\n    // Basis vectors default to identity\r\n    var bx = [1.0, 0.0, 0.0];\r\n    var by = [0.0, 1.0, 0.0];\r\n    var bz = [0.0, 0.0, 1.0];\r\n\r\n    // Modify basis vectors based on crystal system\r\n    if (crystalType == 0) { // triclinic\r\n        bx = [1.0, 0.1, 0.1];\r\n        by = [0.1, 1.0, 0.1];\r\n        bz = [0.1, 0.1, 1.0];\r\n    } else if (crystalType == 1) { // monoclinic\r\n        by = [0.2, 1.0, 0.1];\r\n    } else if (crystalType == 2) { // orthorhombic\r\n        bx = [1.2, 0.0, 0.0];\r\n        by = [0.0, 1.1, 0.0];\r\n        bz = [0.0, 0.0, 0.9];\r\n    } else if (crystalType == 3) { // tetragonal\r\n        bz = [0.0, 0.0, 1.5];\r\n    } else if (crystalType == 4) { // trigonal\r\n        bx = [1.0, 0.0, 0.0];\r\n        by = [0.5, 0.866, 0.0];\r\n    } else if (crystalType == 5) { // hexagonal\r\n        bx = [1.0, 0.0, 0.0];\r\n        by = [0.5, 0.866, 0.0];\r\n        bz = [0.0, 0.0, 1.5];\r\n    } else if (crystalType == 6) { // cubic\r\n        bx = [1.0, 0.0, 0.0];\r\n        by = [0.0, 1.0, 0.0];\r\n        bz = [0.0, 0.0, 1.0];\r\n    }\r\n\r\n    // Compute 3D position\r\n    var x = gx * bx[0] + gy * by[0] + gz * bz[0];\r\n    var y = gx * bx[1] + gy * by[1] + gz * bz[1];\r\n    var z = gx * bx[2] + gy * by[2] + gz * bz[2];\r\n\r\n    // Output coordinates\r\n    out1 = x;\r\n    out2 = y;\r\n    out3 = z;\r\n}",
						"safemath" : 1,
						"expr" : ""
					}
,
					"rnbo_serial" : 1,
					"rnbo_uniqueid" : "codebox~_obj-2",
					"rnboinfo" : 					{
						"needsInstanceInfo" : 1,
						"argnames" : 						{
							"reset" : 							{
								"attrOrProp" : 1,
								"digest" : "Reset all state and params to initial values",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 1,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "bang"
							}
,
							"out1" : 							{
								"attrOrProp" : 1,
								"digest" : "out1",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "signal"
							}
,
							"out2" : 							{
								"attrOrProp" : 1,
								"digest" : "out2",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "signal"
							}
,
							"out3" : 							{
								"attrOrProp" : 1,
								"digest" : "out3",
								"isalias" : 0,
								"aliases" : [  ],
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"outlet" : 1,
								"type" : "signal"
							}
,
							"rate" : 							{
								"attrOrProp" : 1,
								"digest" : "rate",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 1,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "number",
								"defaultValue" : "0.5"
							}
,
							"traversalOrder" : 							{
								"attrOrProp" : 1,
								"digest" : "traversalOrder",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 1,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"crystalType" : 							{
								"attrOrProp" : 1,
								"digest" : "crystalType",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 1,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "number",
								"defaultValue" : "0"
							}
,
							"expr" : 							{
								"attrOrProp" : 2,
								"digest" : "expr",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "symbol"
							}
,
							"safemath" : 							{
								"attrOrProp" : 2,
								"digest" : "Use safe math expressions (e.g.: division by 0 will not crash).",
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "bool",
								"defaultValue" : "true"
							}

						}
,
						"inputs" : [  ],
						"outputs" : [ 							{
								"name" : "out1",
								"type" : "signal",
								"digest" : "out1",
								"docked" : 0
							}
, 							{
								"name" : "out2",
								"type" : "signal",
								"digest" : "out2",
								"docked" : 0
							}
, 							{
								"name" : "out3",
								"type" : "signal",
								"digest" : "out3",
								"docked" : 0
							}
 ],
						"helpname" : "codebox~",
						"aliasOf" : "expr~",
						"classname" : "codebox~",
						"operator" : 0,
						"versionId" : -1615758737,
						"changesPatcherIO" : 0
					}

				}

			}
, 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 212.0, 30.0, 87.0, 23.0 ],
					"rnbo_classname" : "set",
					"rnbo_serial" : 1,
					"rnbo_uniqueid" : "set_obj-6",
					"rnboinfo" : 					{
						"needsInstanceInfo" : 1,
						"argnames" : 						{
							"name" : 							{
								"attrOrProp" : 2,
								"digest" : "attribute/param to control",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "symbol",
								"mandatory" : 1
							}

						}
,
						"inputs" : [ 							{
								"name" : "input",
								"type" : [ "bang", "number", "list", "signal" ],
								"digest" : "attribute or parameter value (bang, number, list)",
								"hot" : 1,
								"docked" : 0
							}
 ],
						"outputs" : [ 							{
								"name" : "output",
								"type" : [ "bang", "number", "list", "signal" ],
								"digest" : "connect to first inlet of gen or subpatcher",
								"docked" : 0
							}
 ],
						"helpname" : "set",
						"aliasOf" : "set",
						"classname" : "set",
						"operator" : 0,
						"versionId" : 2121358407,
						"changesPatcherIO" : 0
					}
,
					"text" : "set crystalType"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 119.0, 30.0, 48.0, 23.0 ],
					"rnbo_classname" : "set",
					"rnbo_serial" : 2,
					"rnbo_uniqueid" : "set_obj-7",
					"rnboinfo" : 					{
						"needsInstanceInfo" : 1,
						"argnames" : 						{
							"name" : 							{
								"attrOrProp" : 2,
								"digest" : "attribute/param to control",
								"defaultarg" : 1,
								"isalias" : 0,
								"aliases" : [  ],
								"settable" : 1,
								"attachable" : 0,
								"isparam" : 0,
								"deprecated" : 0,
								"type" : "symbol",
								"mandatory" : 1
							}

						}
,
						"inputs" : [ 							{
								"name" : "input",
								"type" : [ "bang", "number", "list", "signal" ],
								"digest" : "attribute or parameter value (bang, number, list)",
								"hot" : 1,
								"docked" : 0
							}
 ],
						"outputs" : [ 							{
								"name" : "output",
								"type" : [ "bang", "number", "list", "signal" ],
								"digest" : "connect to first inlet of gen or subpatcher",
								"docked" : 0
							}
 ],
						"helpname" : "set",
						"aliasOf" : "set",
						"classname" : "set",
						"operator" : 0,
						"versionId" : 2121358407,
						"changesPatcherIO" : 0
					}
,
					"text" : "set rate"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-2", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-2", 2 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-2", 0 ],
					"source" : [ "obj-6", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-2", 0 ],
					"source" : [ "obj-7", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-6", 0 ],
					"source" : [ "obj-8", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-9", 0 ]
				}

			}
 ],
		"originid" : "pat-211"
	}

}
